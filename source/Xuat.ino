#include "vn_lunar.h"
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define XPOS   0 // Indexes into the 'icons' array in function below
#define YPOS   1
#define DELTAY 2

#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define NUMFLAKES     10 // Number of snowflakes in the animation example

#define LOGO_HEIGHT   16
#define LOGO_WIDTH    16

uint32_t dd,mm,yy;
uint32_t Lunar_dd;
uint32_t Lunar_mm;
uint32_t Lunar_yy;
char*	canchingay;
char*	canchithang;
char*	canchinam;

const unsigned char Ti1 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x07, 0xf0, 0x3f, 0x80, 0x07, 0xf0, 0xff, 0xe0, 0x1f, 0xfc, 
	0xff, 0xe0, 0x1f, 0xfc, 0xff, 0xe0, 0x1f, 0xfc, 0xff, 0xef, 0xdf, 0xfc, 0xff, 0xef, 0xdf, 0xfc, 
	0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xf0, 
	0x03, 0xff, 0xff, 0x00, 0x03, 0x87, 0x87, 0x00, 0x0f, 0x87, 0x87, 0xc0, 0x0f, 0x87, 0x87, 0xc0, 
	0x0f, 0x87, 0x87, 0xc0, 0x0f, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xc0, 0xf3, 0xff, 0xff, 0x3c, 
	0xf3, 0xff, 0xff, 0x3c, 0x0f, 0xff, 0xff, 0xc0, 0x01, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0x00, 
	0x0e, 0x7f, 0xf9, 0xc0, 0x0e, 0x7f, 0xf9, 0xc0, 0xf0, 0x1f, 0xe0, 0x3c, 0xf0, 0x1f, 0xe0, 0x3c, 
	0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Ti2 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x3f, 0x80, 0x07, 0xf0, 0x3f, 0x80, 0x07, 0xf0, 0xff, 0xe0, 0x1f, 0xfc, 
	0xff, 0xe0, 0x1f, 0xfc, 0xff, 0xe0, 0x1f, 0xfc, 0xff, 0xef, 0xdf, 0xfc, 0xff, 0xef, 0xdf, 0xfc, 
	0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xf0, 
	0x03, 0xff, 0xff, 0x00, 0x03, 0x87, 0xff, 0x00, 0x0f, 0x87, 0xff, 0xc0, 0x0f, 0x87, 0xff, 0xc0, 
	0x0f, 0x87, 0x87, 0xc0, 0x0f, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xc0, 0xf3, 0xff, 0xff, 0x3c, 
	0xf3, 0xff, 0xff, 0x3c, 0x0f, 0xff, 0xff, 0xc0, 0x01, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0x00, 
	0x0e, 0x7f, 0xf9, 0xc0, 0x0e, 0x7f, 0xf9, 0xc0, 0xf0, 0x1f, 0xe0, 0x3c, 0xf0, 0x1f, 0xe0, 0x3c, 
	0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Suu1 [] PROGMEM = {
	0x20, 0x00, 0x00, 0x10, 0x30, 0x00, 0x00, 0x10, 0x38, 0x00, 0x00, 0x30, 0x38, 0x00, 0x00, 0x70, 
	0x3c, 0x00, 0x00, 0xf0, 0x3e, 0x00, 0x01, 0xf0, 0x1f, 0xdf, 0xef, 0xe0, 0x0f, 0xdf, 0xef, 0xc0, 
	0x07, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 
	0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xf0, 0x03, 0xc7, 0x8f, 0x00, 
	0x03, 0xc7, 0x8f, 0x00, 0x07, 0xc7, 0x8f, 0x80, 0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 
	0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x00, 0x01, 0xff, 0xfe, 0x00, 
	0x00, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x3b, 0x78, 0x00, 0x00, 0x3b, 0x70, 0x00, 
	0x00, 0x1f, 0xe0, 0x00, 0x00, 0x1f, 0xe0, 0x00
};

const unsigned char Suu2 [] PROGMEM = {
	0x20, 0x00, 0x00, 0x10, 0x30, 0x00, 0x00, 0x10, 0x38, 0x00, 0x00, 0x30, 0x38, 0x00, 0x00, 0x70, 
	0x3c, 0x00, 0x00, 0xf0, 0x3e, 0x00, 0x01, 0xf0, 0x1f, 0xdf, 0xef, 0xe0, 0x0f, 0xdf, 0xef, 0xc0, 
	0x07, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 
	0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xf0, 0x03, 0xc7, 0xff, 0x00, 
	0x03, 0xc7, 0xff, 0x00, 0x07, 0xc7, 0x8f, 0x80, 0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 
	0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 0x03, 0xff, 0xff, 0x00, 0x01, 0xff, 0xfe, 0x00, 
	0x00, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0x3b, 0x78, 0x00, 0x00, 0x3b, 0x70, 0x00, 
	0x00, 0x1f, 0xe0, 0x00, 0x00, 0x1f, 0xe0, 0x00
};

const unsigned char Dan1 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x01, 0xf0, 0x7f, 0x80, 0x03, 0xf8, 0xff, 0xc0, 0x07, 0xfc, 
	0xe1, 0xff, 0xff, 0x0c, 0xe1, 0xff, 0xff, 0x0c, 0xe1, 0xff, 0xff, 0x0c, 0xe1, 0xff, 0xff, 0x0c, 
	0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xf0, 
	0x07, 0xff, 0xff, 0xc0, 0x07, 0x87, 0xc3, 0xc0, 0x07, 0x87, 0xc3, 0xc0, 0x07, 0x87, 0xc3, 0xc0, 
	0x07, 0x87, 0xc3, 0xc0, 0x07, 0xff, 0xff, 0xc0, 0x00, 0x7c, 0x7c, 0x00, 0x00, 0x7c, 0x7c, 0x00, 
	0x07, 0xfc, 0x7f, 0xc0, 0x00, 0x7e, 0xfc, 0x00, 0x00, 0x76, 0xdc, 0x00, 0x03, 0xf9, 0x3f, 0x80, 
	0x01, 0xff, 0xff, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x00, 0x3f, 0xf8, 0x00, 
	0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char Dan2 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x01, 0xf0, 0x7f, 0x80, 0x03, 0xf8, 0xff, 0xc0, 0x07, 0xfc, 
	0xe1, 0xff, 0xff, 0x0c, 0xe1, 0xff, 0xff, 0x0c, 0xe1, 0xff, 0xff, 0x0c, 0xe1, 0xff, 0xff, 0x0c, 
	0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xf0, 
	0x07, 0xff, 0xff, 0xc0, 0x07, 0x87, 0xff, 0xc0, 0x07, 0x87, 0xff, 0xc0, 0x07, 0x87, 0xff, 0xc0, 
	0x07, 0x87, 0xc3, 0xc0, 0x07, 0xff, 0xff, 0xc0, 0x00, 0x7c, 0x7c, 0x00, 0x00, 0x7c, 0x7c, 0x00, 
	0x07, 0xfc, 0x7f, 0xc0, 0x00, 0x7e, 0xfc, 0x00, 0x00, 0x76, 0xdc, 0x00, 0x03, 0xf9, 0x3f, 0x80, 
	0x01, 0xff, 0xff, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x00, 0x3f, 0xf8, 0x00, 
	0x00, 0x0f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Meo1 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x40, 0x1c, 0x00, 0x00, 0xe0, 0x3e, 0x00, 0x01, 0xf0, 
	0x3e, 0x00, 0x01, 0xf0, 0x7f, 0xcc, 0xcf, 0xf8, 0x7f, 0xcc, 0xcf, 0xf8, 0x7f, 0xcc, 0xcf, 0xf8, 
	0x7f, 0xcc, 0xcf, 0xf8, 0x7f, 0xcc, 0xcf, 0xf8, 0x7f, 0xcc, 0xcf, 0xf8, 0x3f, 0xcc, 0xcf, 0xf0, 
	0x1f, 0xcc, 0xcf, 0xe0, 0x1f, 0xcc, 0xcf, 0xe0, 0x7f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xf8, 
	0x01, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x7f, 0x8f, 0xc7, 0xf8, 0x7f, 0x8f, 0xc7, 0xf8, 
	0x01, 0x88, 0xc6, 0x00, 0x01, 0xfd, 0xfe, 0x00, 0x7f, 0xfd, 0xff, 0xf8, 0x1f, 0xea, 0xbf, 0xe0, 
	0x1f, 0xf7, 0x7f, 0xe0, 0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 0x01, 0xff, 0xfe, 0x00, 
	0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Meo2 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x40, 0x1c, 0x00, 0x00, 0xe0, 0x3e, 0x00, 0x01, 0xf0, 
	0x3e, 0x00, 0x01, 0xf0, 0x7f, 0xcc, 0xcf, 0xf8, 0x7f, 0xcc, 0xcf, 0xf8, 0x7f, 0xcc, 0xcf, 0xf8, 
	0x7f, 0xcc, 0xcf, 0xf8, 0x7f, 0xcc, 0xcf, 0xf8, 0x7f, 0xcc, 0xcf, 0xf8, 0x3f, 0xcc, 0xcf, 0xf0, 
	0x1f, 0xcc, 0xcf, 0xe0, 0x1f, 0xcc, 0xcf, 0xe0, 0x7f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xf8, 
	0x01, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x7f, 0x8f, 0xff, 0xf8, 0x7f, 0x8f, 0xff, 0xf8, 
	0x01, 0x88, 0xc6, 0x00, 0x01, 0xfd, 0xfe, 0x00, 0x7f, 0xfd, 0xff, 0xf8, 0x1f, 0xea, 0xbf, 0xe0, 
	0x1f, 0xf7, 0x7f, 0xe0, 0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 0x01, 0xff, 0xfe, 0x00, 
	0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Thin1 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0xc0, 0x0c, 0x00, 0x00, 0xc0, 0x0c, 0x00, 0x80, 0xc0, 
	0x0c, 0x01, 0x80, 0xc0, 0x7f, 0x03, 0x83, 0xf8, 0x7f, 0x8f, 0xc7, 0xf8, 0x03, 0x9f, 0xe7, 0x00, 
	0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 0x7f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xf8, 
	0x1f, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 
	0x0f, 0xff, 0xff, 0xc0, 0x0f, 0x8f, 0xc7, 0xc0, 0x0f, 0x8f, 0xc7, 0xc0, 0x0f, 0x8f, 0xc7, 0xc0, 
	0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 
	0x00, 0xff, 0xfc, 0x00, 0x30, 0x7f, 0xf8, 0x30, 0x30, 0x7b, 0x78, 0x30, 0x0f, 0x9f, 0xe7, 0xc0, 
	0x0f, 0x9f, 0xe7, 0xc0, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Thin2 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0xc0, 0x0c, 0x00, 0x00, 0xc0, 0x0c, 0x00, 0x80, 0xc0, 
	0x0c, 0x01, 0x80, 0xc0, 0x7f, 0x03, 0x83, 0xf8, 0x7f, 0x8f, 0xc7, 0xf8, 0x03, 0x9f, 0xe7, 0x00, 
	0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 0x7f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xf8, 
	0x1f, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xe0, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 
	0x0f, 0xff, 0xff, 0xc0, 0x0f, 0x8f, 0xff, 0xc0, 0x0f, 0x8f, 0xff, 0xc0, 0x0f, 0x8f, 0xc7, 0xc0, 
	0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 
	0x00, 0xff, 0xfc, 0x00, 0x30, 0x7f, 0xf8, 0x30, 0x30, 0x7b, 0x78, 0x30, 0x0f, 0x9f, 0xe7, 0xc0, 
	0x0f, 0x9f, 0xe7, 0xc0, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Ty1 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0x00, 
	0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xe0, 
	0x3f, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xf8, 
	0x7f, 0x0f, 0xc3, 0xf8, 0x7f, 0x0f, 0xc3, 0xf8, 0x7f, 0x0f, 0xc3, 0xf8, 0x3f, 0x0f, 0xc3, 0xf0, 
	0x3f, 0xff, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xe0, 0x07, 0xff, 0xff, 0x80, 
	0x07, 0xff, 0xff, 0x80, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x7f, 0xf8, 0x00, 
	0x00, 0x1f, 0xe0, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x0c, 0xc0, 0x00, 
	0x00, 0x0c, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Ty2 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0x00, 
	0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xe0, 
	0x3f, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xf8, 
	0x7f, 0x0f, 0xff, 0xf8, 0x7f, 0x0f, 0xff, 0xf8, 0x7f, 0x0f, 0xff, 0xf8, 0x3f, 0x0f, 0xc3, 0xf0, 
	0x3f, 0xff, 0xff, 0xf0, 0x1f, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xe0, 0x07, 0xff, 0xff, 0x80, 
	0x07, 0xff, 0xff, 0x80, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x7f, 0xf8, 0x00, 
	0x00, 0x1f, 0xe0, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x0c, 0xc0, 0x00, 
	0x00, 0x0c, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Ngo1 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0xf8, 0x7e, 0x00, 0x00, 0xf8, 0x1f, 0x80, 0x03, 0xe0, 
	0x1f, 0x80, 0x03, 0xe0, 0x1f, 0xe7, 0xcf, 0xe0, 0x07, 0xe7, 0xcf, 0x80, 0x07, 0xff, 0xff, 0x80, 
	0x01, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 
	0x07, 0xff, 0xff, 0x80, 0x07, 0x87, 0x87, 0x80, 0x07, 0x87, 0x87, 0x80, 0x07, 0x87, 0x87, 0x80, 
	0x07, 0x87, 0x87, 0x80, 0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 0x01, 0xff, 0xfe, 0x00, 
	0x01, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x7f, 0xf8, 0x00, 
	0x00, 0x7f, 0xf8, 0x00, 0x00, 0x67, 0x98, 0x00, 0x00, 0x67, 0x98, 0x00, 0x00, 0x7f, 0xf8, 0x00, 
	0x00, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Ngo2 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0xf8, 0x7e, 0x00, 0x00, 0xf8, 0x1f, 0x80, 0x03, 0xe0, 
	0x1f, 0x80, 0x03, 0xe0, 0x1f, 0xe7, 0xcf, 0xe0, 0x07, 0xe7, 0xcf, 0x80, 0x07, 0xff, 0xff, 0x80, 
	0x01, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 
	0x07, 0xff, 0xff, 0x80, 0x07, 0x87, 0xff, 0x80, 0x07, 0x87, 0xff, 0x80, 0x07, 0x87, 0xff, 0x80, 
	0x07, 0x87, 0x87, 0x80, 0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 0x01, 0xff, 0xfe, 0x00, 
	0x01, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xf8, 0x00, 0x00, 0x7f, 0xf8, 0x00, 
	0x00, 0x7f, 0xf8, 0x00, 0x00, 0x67, 0x98, 0x00, 0x00, 0x67, 0x98, 0x00, 0x00, 0x7f, 0xf8, 0x00, 
	0x00, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Mui1 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x01, 0xe0, 0x0f, 0x80, 0x07, 0xc0, 0x03, 0xe0, 0x1f, 0x00, 
	0x00, 0xe0, 0x1c, 0x00, 0x00, 0xf8, 0x7c, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x3f, 0xf0, 0x00, 
	0x00, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0x00, 
	0x3f, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xf8, 0x07, 0xc7, 0x8f, 0x80, 
	0x07, 0xc7, 0x8f, 0x80, 0x03, 0xc7, 0x8f, 0x00, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 
	0x00, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xfc, 0x00, 
	0x00, 0x3f, 0xf0, 0x00, 0x00, 0x3b, 0x70, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x1f, 0xe0, 0x00, 
	0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Mui2 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x01, 0xe0, 0x0f, 0x80, 0x07, 0xc0, 0x03, 0xe0, 0x1f, 0x00, 
	0x00, 0xe0, 0x1c, 0x00, 0x00, 0xf8, 0x7c, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x3f, 0xf0, 0x00, 
	0x00, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0x00, 
	0x3f, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xf8, 0x7f, 0xff, 0xff, 0xf8, 0x07, 0xc7, 0xff, 0x80, 
	0x07, 0xc7, 0xff, 0x80, 0x03, 0xc7, 0x8f, 0x00, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 
	0x00, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xfc, 0x00, 0x00, 0xff, 0xfc, 0x00, 
	0x00, 0x3f, 0xf0, 0x00, 0x00, 0x3b, 0x70, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0x1f, 0xe0, 0x00, 
	0x00, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Than1 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0xff, 0xfc, 0x00, 
	0x00, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0xc0, 
	0x0f, 0xff, 0xff, 0xc0, 0x1f, 0xff, 0xff, 0xe0, 0x7f, 0x87, 0x87, 0xf8, 0x7f, 0x87, 0x87, 0xf8, 
	0x5f, 0x87, 0x87, 0xe8, 0x5f, 0x87, 0x87, 0xe8, 0x5f, 0xff, 0xff, 0xe8, 0x7f, 0xff, 0xff, 0xf8, 
	0x7f, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xe0, 0x0f, 0xfb, 0x7f, 0xc0, 
	0x0f, 0xfb, 0x7f, 0xc0, 0x0f, 0xfe, 0xff, 0xc0, 0x07, 0xdf, 0xef, 0x80, 0x07, 0xef, 0xdf, 0x80, 
	0x07, 0xf0, 0x3f, 0x80, 0x01, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xf8, 0x00, 
	0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Than2 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x3f, 0xf0, 0x00, 0x00, 0xff, 0xfc, 0x00, 
	0x00, 0xff, 0xfc, 0x00, 0x03, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x00, 0x0f, 0xff, 0xff, 0xc0, 
	0x0f, 0xff, 0xff, 0xc0, 0x1f, 0xff, 0xff, 0xe0, 0x7f, 0x87, 0xff, 0xf8, 0x7f, 0x87, 0xff, 0xf8, 
	0x5f, 0x87, 0xff, 0xe8, 0x5f, 0x87, 0x87, 0xe8, 0x5f, 0xff, 0xff, 0xe8, 0x7f, 0xff, 0xff, 0xf8, 
	0x7f, 0xff, 0xff, 0xf8, 0x1f, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xe0, 0x0f, 0xfb, 0x7f, 0xc0, 
	0x0f, 0xfb, 0x7f, 0xc0, 0x0f, 0xfe, 0xff, 0xc0, 0x07, 0xdf, 0xef, 0x80, 0x07, 0xef, 0xdf, 0x80, 
	0x07, 0xf0, 0x3f, 0x80, 0x01, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xf8, 0x00, 
	0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Dau1 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1c, 0x00, 0x00, 0x0f, 0x3e, 0x00, 0x00, 0x0f, 0xbe, 0x00, 
	0x00, 0x3f, 0xfc, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x80, 
	0x07, 0xff, 0xff, 0xc0, 0x1f, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xf8, 
	0x7f, 0xff, 0xff, 0xf8, 0x7f, 0x0f, 0xc3, 0xf8, 0x7f, 0x0f, 0xc3, 0xf8, 0x7f, 0x0f, 0xc3, 0xf8, 
	0x7f, 0x0f, 0xc3, 0xf8, 0x7f, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xf0, 0x1f, 0xfc, 0xff, 0xe0, 
	0x0f, 0xfb, 0x7f, 0xc0, 0x07, 0xf7, 0xbf, 0x80, 0x03, 0xef, 0xdf, 0x00, 0x01, 0xdf, 0xee, 0x00, 
	0x00, 0x3f, 0xf0, 0x00, 0x00, 0x1b, 0x60, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x07, 0x80, 0x00, 
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Dau2 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1c, 0x00, 0x00, 0x0f, 0x3e, 0x00, 0x00, 0x0f, 0xbe, 0x00, 
	0x00, 0x3f, 0xfc, 0x00, 0x00, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0x80, 
	0x07, 0xff, 0xff, 0xc0, 0x1f, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xf8, 
	0x7f, 0xff, 0xff, 0xf8, 0x7f, 0x0f, 0xff, 0xf8, 0x7f, 0x0f, 0xff, 0xf8, 0x7f, 0x0f, 0xff, 0xf8, 
	0x7f, 0x0f, 0xc3, 0xf8, 0x7f, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xf0, 0x1f, 0xfc, 0xff, 0xe0, 
	0x0f, 0xfb, 0x7f, 0xc0, 0x07, 0xf7, 0xbf, 0x80, 0x03, 0xef, 0xdf, 0x00, 0x01, 0xdf, 0xee, 0x00, 
	0x00, 0x3f, 0xf0, 0x00, 0x00, 0x1b, 0x60, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x07, 0x80, 0x00, 
	0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


const unsigned char Tuat1 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x03, 0xf8, 0x7f, 0x80, 0x07, 0xf8, 0x7f, 0xc0, 0x0f, 0xf8, 
	0x1f, 0xc0, 0x0f, 0xe0, 0x1f, 0xc0, 0x0f, 0xe0, 0x07, 0xc0, 0x0f, 0x80, 0x07, 0xc0, 0x0f, 0x80, 
	0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xf0, 
	0x3f, 0xff, 0xff, 0xf0, 0x3f, 0x0f, 0xc3, 0xf0, 0x3f, 0x0f, 0xc3, 0xf0, 0x3f, 0x0f, 0xc3, 0xf0, 
	0x3f, 0x0f, 0xc3, 0xf0, 0x3f, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xf0, 0x3f, 0xf8, 0xff, 0xf0, 
	0x3f, 0xf8, 0xff, 0xf0, 0x1f, 0xf8, 0xff, 0xe0, 0x1f, 0xdd, 0xef, 0xe0, 0x0f, 0xbd, 0xf7, 0xc0, 
	0x0f, 0xda, 0x6f, 0xc0, 0x03, 0xe7, 0x9f, 0x00, 0x00, 0xfb, 0x7c, 0x00, 0x00, 0x7c, 0xf8, 0x00, 
	0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Tuat2 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x03, 0xf8, 0x7f, 0x80, 0x07, 0xf8, 0x7f, 0xc0, 0x0f, 0xf8, 
	0x1f, 0xc0, 0x0f, 0xe0, 0x1f, 0xc0, 0x0f, 0xe0, 0x07, 0xc0, 0x0f, 0x80, 0x07, 0xc0, 0x0f, 0x80, 
	0x07, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xf0, 
	0x3f, 0xff, 0xff, 0xf0, 0x3f, 0x0f, 0xff, 0xf0, 0x3f, 0x0f, 0xff, 0xf0, 0x3f, 0x0f, 0xff, 0xf0, 
	0x3f, 0x0f, 0xc3, 0xf0, 0x3f, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xf0, 0x3f, 0xf8, 0xff, 0xf0, 
	0x3f, 0xf8, 0xff, 0xf0, 0x1f, 0xf8, 0xff, 0xe0, 0x1f, 0xdd, 0xef, 0xe0, 0x0f, 0xbd, 0xf7, 0xc0, 
	0x0f, 0xda, 0x6f, 0xc0, 0x03, 0xe7, 0x9f, 0x00, 0x00, 0xfb, 0x7c, 0x00, 0x00, 0x7c, 0xf8, 0x00, 
	0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Hoi1 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x01, 0xf8, 0x7e, 0x00, 0x01, 0xf8, 0x7f, 0x80, 0x07, 0xf8, 
	0x7f, 0x80, 0x07, 0xf8, 0x7f, 0xe0, 0x1f, 0xf8, 0x3f, 0xe0, 0x1f, 0xf0, 0x1f, 0xff, 0xff, 0xe0, 
	0x1f, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xe0, 0x0f, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xc0, 
	0x3e, 0x1f, 0xe1, 0xf0, 0x3e, 0x1f, 0xe1, 0xf0, 0x3e, 0x1f, 0xe1, 0xf0, 0x3e, 0x1f, 0xe1, 0xf0, 
	0x3f, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xf0, 0x3f, 0xc7, 0x8f, 0xf0, 0x3f, 0xb8, 0x77, 0xf0, 
	0x1f, 0x7f, 0xfb, 0xe0, 0x1f, 0x67, 0x9b, 0xe0, 0x0f, 0x67, 0x9b, 0xc0, 0x0f, 0x67, 0x9b, 0xc0, 
	0x07, 0xa7, 0x97, 0x80, 0x03, 0xbc, 0xf7, 0x00, 0x01, 0xc3, 0x0e, 0x00, 0x00, 0xff, 0xfc, 0x00, 
	0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00
};

const unsigned char Hoi2 [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x01, 0xf8, 0x7e, 0x00, 0x01, 0xf8, 0x7f, 0x80, 0x07, 0xf8, 
	0x7f, 0x80, 0x07, 0xf8, 0x7f, 0xe0, 0x1f, 0xf8, 0x3f, 0xe0, 0x1f, 0xf0, 0x1f, 0xff, 0xff, 0xe0, 
	0x1f, 0xff, 0xff, 0xe0, 0x1f, 0xff, 0xff, 0xe0, 0x0f, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xc0, 
	0x3e, 0x1f, 0xff, 0xf0, 0x3e, 0x1f, 0xff, 0xf0, 0x3e, 0x1f, 0xff, 0xf0, 0x3e, 0x1f, 0xe1, 0xf0, 
	0x3f, 0xff, 0xff, 0xf0, 0x3f, 0xff, 0xff, 0xf0, 0x3f, 0xc7, 0x8f, 0xf0, 0x3f, 0xb8, 0x77, 0xf0, 
	0x1f, 0x7f, 0xfb, 0xe0, 0x1f, 0x67, 0x9b, 0xe0, 0x0f, 0x67, 0x9b, 0xc0, 0x0f, 0x67, 0x9b, 0xc0, 
	0x07, 0xa7, 0x97, 0x80, 0x03, 0xbc, 0xf7, 0x00, 0x01, 0xc3, 0x0e, 0x00, 0x00, 0xff, 0xfc, 0x00, 
	0x00, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00
};

void Nhap()
{
    char inputString[11];
    int index = 0; 
    bool startSaving = false; 
    if (Serial.available() > 0) { 
    char inChar = (char) Serial.read(); 
    
    if (inChar == 'C') {
      digitalWrite(13, HIGH);  
      startSaving = true; 
      index = 0; 
    }
    
    if (startSaving) { 
      inputString[index] = inChar; 
      
      if (index == 10) { 
        int x1,y1,x2,y2,x3,y3,z3,t3;
        for (int i = 0; i < 11; i++) {
          Serial.print(inputString[i]);
          if(i==3){
            if(inputString[i]=="0"){
              x1 = 0;
            }
            else if(inputString[i]=="1"){
              x1 = 10;
            }
            else if(inputString[i]=="2"){
              x1 = 20;
            }
            else {
              x1 = 30;
            }
          }
          if(i==4){
            if(inputString[i]=="0"){
              y1 = 0;
            }
            else if(inputString[i]=="1"){
              y1 = 1;
            }
            else if(inputString[i]=="2"){
              y1 = 2;
            }
            else if(inputString[i]=="3"){
              y1 = 3;
            }
            else if(inputString[i]=="4"){
              y1 = 4;
            }
            else if(inputString[i]=="5"){
              y1 = 5;
            }
            else if(inputString[i]=="6"){
              y1 = 6;
            }
            else if(inputString[i]=="7"){
              y1 = 7;
            }
            else if(inputString[i]=="8"){
              y1 = 8;
            }
            else {
              y1 = 9;
            }
          }
          if(i==5){
            if(inputString[i]=="0"){
              x2 = 0;
            }
            else {
              x2 = 10;
            }
          }
          if(i==6){
            if(inputString[i]=="0"){
              y2 = 0;
            }
            else if(inputString[i]=="1"){
              y2 = 1;
            }
            else {
              y2 = 2;
            }
          }
          if(i==7){
            if(inputString[i]=="0"){
              x3 = 0;
            }
            else if(inputString[i]=="1"){
              x3 = 1000;
            }
            else if(inputString[i]=="2"){
              x3 = 2000;
            }
            else if(inputString[i]=="3"){
              x3 = 3000;
            }
            else if(inputString[i]=="4"){
              x3 = 4000;
            }
            else if(inputString[i]=="5"){
              x3 = 5000;
            }
            else if(inputString[i]=="6"){
              x3 = 6000;
            }
            else if(inputString[i]=="7"){
              x3 = 7000;
            }
            else if(inputString[i]=="8"){
              x3 = 8000;
            }
            else {
              x3 = 9000;
            }
          }
          if(i==8){
            if(inputString[i]=="0"){
              y3 = 0;
            }
            else if(inputString[i]=="1"){
              y3 = 100;
            }
            else if(inputString[i]=="2"){
              y3 = 200;
            }
            else if(inputString[i]=="3"){
              y3 = 300;
            }
            else if(inputString[i]=="4"){
              y3 = 400;
            }
            else if(inputString[i]=="5"){
              y3 = 500;
            }
            else if(inputString[i]=="6"){
              y3 = 600;
            }
            else if(inputString[i]=="7"){
              y3 = 700;
            }
            else if(inputString[i]=="8"){
              y3 = 800;
            }
            else {
              y3 = 900;
            }
          }
          if(i==9){
            if(inputString[i]=="0"){
              z3 = 0;
            }
            else if(inputString[i]=="1"){
              z3 = 10;
            }
            else if(inputString[i]=="2"){
              z3 = 20;
            }
            else if(inputString[i]=="3"){
              z3 = 30;
            }
            else if(inputString[i]=="4"){
              z3 = 40;
            }
            else if(inputString[i]=="5"){
              z3 = 50;
            }
            else if(inputString[i]=="6"){
              z3 = 60;
            }
            else if(inputString[i]=="7"){
              z3 = 70;
            }
            else if(inputString[i]=="8"){
              z3 = 80;
            }
            else {
              z3 = 90;
            }
          }
          if(i==10){
            if(inputString[i]=="0"){
              t3 = 0;
            }
            else if(inputString[i]=="1"){
              t3 = 1;
            }
            else if(inputString[i]=="2"){
              t3 = 2;
            }
            else if(inputString[i]=="3"){
              t3 = 3;
            }
            else if(inputString[i]=="4"){
              t3 = 4;
            }
            else if(inputString[i]=="5"){
              t3 = 5;
            }
            else if(inputString[i]=="6"){
              t3 = 6;
            }
            else if(inputString[i]=="7"){
              t3 = 7;
            }
            else if(inputString[i]=="8"){
              t3 = 8;
            }
            else {
              t3 = 9;
            }
          }
        }
        dd = x1 + y1;
        mm = x2 + y2;
        yy = x3 + y3 + z3 + t3;
        startSaving = false; 
        memset(inputString, 0, sizeof(inputString)); 
      } else {
        index++;
      }
    }
  }
}

void setup() {
  //ChuyenDoi();
  vn_lunar solar;
  solar.convertSolar2Lunar(dd,mm,yy);

  Lunar_dd = solar.get_lunar_dd();
  Lunar_mm = solar.get_lunar_mm();
  Lunar_yy = solar.get_lunar_yy();
  solar.convert2CanChi(dd, mm, yy, Lunar_dd, Lunar_mm, Lunar_yy);
  canchingay = solar.get_canchi_ngay();
  canchithang = solar.get_canchi_thang();
  canchinam = solar.get_canchi_nam();

  if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;); // Don't proceed, loop forever
  }
  
  display.display();
  delay(2000); // Pause for 2 seconds

  display.clearDisplay();

  display.display();
  delay(2000);
}
void Xuat()
{
  display.setTextSize(2);
  display.setTextColor(WHITE);
  //nam
  display.setCursor((SCREEN_HEIGHT-10*(sizeof(Lunar_yy)-1))/2, 0);
  display.setRotation(3);
  display.println(Lunar_yy);

  // can chi cua nam
  display.setTextSize(1);
  display.setCursor((64-5*(sizeof(canchinam)-1))/2, 17);
  display.setRotation(3);
  display.println(canchinam); 
 
  //thang
  display.setTextSize(2);
  display.setCursor((SCREEN_HEIGHT-10*(sizeof(Lunar_mm)-1))/2, 30);
  display.setRotation(3);
  display.println(Lunar_mm);

  display.setTextSize(1);
  display.setCursor(0,33);  
  display.setRotation(3);
  display.println("M: ");

  //can chi cua thang  
  display.setCursor((64-5*(sizeof(canchithang)-1))/2, 47);
  display.setRotation(3);
  display.println(canchithang);

  //ngay
  display.setTextSize(2);
  display.setCursor((SCREEN_HEIGHT-10*(sizeof(Lunar_dd)-1))/2, 60);
  display.setRotation(3);
  display.println(Lunar_dd); 

  display.setTextSize(1);
  display.setCursor(0, 63);
  display.setRotation(3);
  display.println("D:"); 

  // can chi cua ngay
  display.setCursor((64-5*(sizeof(canchingay)-1))/2, 77);
  display.setRotation(3);
  display.println(canchingay);

  //congiap
  display.setRotation(3);
  display.drawBitmap(18, 94, Mui1, 30, 30, WHITE);
  display.display();
  delay(500);

  display.fillRect(18, 94, 40, 40, BLACK);
  
  display.setRotation(3);
  display.drawBitmap(18, 94, Mui2, 30, 30, WHITE);
  display.display();
  delay(250);

  display.fillRect(18, 94, 40, 40, BLACK);

  display.setRotation(3);
  display.drawBitmap(18, 94, Mui1, 30, 30, WHITE);
  display.display();
  delay(500);

  delay(1);
}
void loop() {
  Nhap();
  Xuat();
}

















